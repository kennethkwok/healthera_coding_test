// Mocks generated by Mockito 5.4.4 from annotations
// in healthera_coding_test/test/feature/medication/repository/medication_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:healthera_coding_test/network/api_service.dart' as _i6;
import 'package:healthera_coding_test/network/model/adherences_dto.dart' as _i2;
import 'package:healthera_coding_test/network/model/remedies_dto.dart' as _i3;
import 'package:healthera_coding_test/repository/mapper/adherence_mapper.dart'
    as _i9;
import 'package:healthera_coding_test/repository/mapper/remedy_mapper.dart'
    as _i8;
import 'package:healthera_coding_test/repository/model/adherence.dart' as _i5;
import 'package:healthera_coding_test/repository/model/remedy.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAdherencesDto_0 extends _i1.SmartFake implements _i2.AdherencesDto {
  _FakeAdherencesDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemediesDto_1 extends _i1.SmartFake implements _i3.RemediesDto {
  _FakeRemediesDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemedy_2 extends _i1.SmartFake implements _i4.Remedy {
  _FakeRemedy_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdherence_3 extends _i1.SmartFake implements _i5.Adherence {
  _FakeAdherence_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i6.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.AdherencesDto> getAdherences() => (super.noSuchMethod(
        Invocation.method(
          #getAdherences,
          [],
        ),
        returnValue: _i7.Future<_i2.AdherencesDto>.value(_FakeAdherencesDto_0(
          this,
          Invocation.method(
            #getAdherences,
            [],
          ),
        )),
      ) as _i7.Future<_i2.AdherencesDto>);

  @override
  _i7.Future<_i3.RemediesDto> getRemedies() => (super.noSuchMethod(
        Invocation.method(
          #getRemedies,
          [],
        ),
        returnValue: _i7.Future<_i3.RemediesDto>.value(_FakeRemediesDto_1(
          this,
          Invocation.method(
            #getRemedies,
            [],
          ),
        )),
      ) as _i7.Future<_i3.RemediesDto>);
}

/// A class which mocks [RemedyMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemedyMapper extends _i1.Mock implements _i8.RemedyMapper {
  MockRemedyMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Remedy toRemedy(_i3.RemedyDto? remedy) => (super.noSuchMethod(
        Invocation.method(
          #toRemedy,
          [remedy],
        ),
        returnValue: _FakeRemedy_2(
          this,
          Invocation.method(
            #toRemedy,
            [remedy],
          ),
        ),
      ) as _i4.Remedy);
}

/// A class which mocks [AdherenceMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdherenceMapper extends _i1.Mock implements _i9.AdherenceMapper {
  MockAdherenceMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Adherence toAdherence(_i2.AdherenceDto? adherence) => (super.noSuchMethod(
        Invocation.method(
          #toAdherence,
          [adherence],
        ),
        returnValue: _FakeAdherence_3(
          this,
          Invocation.method(
            #toAdherence,
            [adherence],
          ),
        ),
      ) as _i5.Adherence);
}
